geom_point(
data = true_turnout %>% mutate(key="Turnout") %>% rename(mean=turnout)
) +
theme_sixtysix() %+replace% theme(axis.text.x = element_blank()) +
scale_y_continuous(labels=scales::comma) +
scale_fill_manual(values=cat_colors) +
labs(
x=NULL,
y=NULL,
title=sprintf("Needle Results as of %s pm", pretty_time),
subtitle=sim_subtitle,
fill=NULL
)
cat_sim
true_turnout
cat_sim
63/45
112/85
turnout_sim <- simulate_turnout(
df=df,
turnout_office=office_suffix(turnout_office),
turnout_svd=turnout_svd,
verbose=TRUE
) %>%
mutate(simulated = pretty_simulated(simulated))
USE_MAPS <- TRUE
#
ELECTION <- "20191105"
#
CONFIG <- get_config(ELECTION)
#
USE_LOG <- CONFIG$use_log
setwd("C:/Users/Jonathan Tannen/Dropbox/sixty_six/posts/election_night_needle/")
file <- "results_20191105_213752.csv"
turnout_office <- "MAYOR"
df <- load_data(file)
setwd("C:/Users/Jonathan Tannen/Dropbox/sixty_six/posts/election_night_needle/")
turnout_office <- "MAYOR"
df <- load_data(file)
file <- "raw_data/results_20191105_213752.csv"
df <- load_data(file)
current_time <- file.info(file)$mtime
current_time
n_reporting <- length(unique(df$warddiv))
needle_params <- readRDS(sprintf("outputs/needleparams_%s_log%s.Rds", ELECTION, USE_LOG))
n_reporting
CONFIG$is_primary
if(CONFIG$is_primary){
office_suffix <- function(x) paste0(x, "-DEM")
turnout_svd <- needle_params@turnout_svds$dem
n_council_winners <- 5
} else {
office_suffix <- identity
turnout_svd <- needle_params@turnout_svds$general
n_council_winners <- 7
}
pvote_svd <- needle_params@pvote_svd
turnout_sim <- simulate_turnout(
df=df,
turnout_office=office_suffix(turnout_office),
turnout_svd=turnout_svd,
verbose=FALSE
)
needle_params <- readRDS(sprintf("outputs/needleparams_%s_log%s_svd.Rds", ELECTION, USE_LOG))
if(CONFIG$is_primary){
office_suffix <- function(x) paste0(x, "-DEM")
turnout_svd <- needle_params@turnout_svds$dem
n_council_winners <- 5
} else {
office_suffix <- identity
turnout_svd <- needle_params@turnout_svds$general
n_council_winners <- 7
}
pvote_svd <- needle_params@pvote_svd
turnout_sim <- simulate_turnout(
df=df,
turnout_office=office_suffix(turnout_office),
turnout_svd=turnout_svd,
verbose=FALSE
)
## Since we have 3 columns and ceil(ncand/3) rows,
## fig.asp should be ceil(ncand/3) / 3
simulate_office <- function(
office,
office_name,
n_winners=1,
consider_divs=NULL
){
simulate_pvote(
df,
use_office=office_suffix(office),
office_name=office_name,
turnout_sim=turnout_sim,
pvote_svd=pvote_svd,
n_winners=n_winners,
verbose=FALSE,
consider_divs=consider_divs
)
}
council_at_large_plot <- simulate_office(
"COUNCIL AT LARGE",
"Council At Large",
n_winners=n_council_winners
)
council_at_large_plot[["map"]] %>% print()
council_at_large_plot[["needle"]] %>% print()
div_cats <- readRDS("../../data/processed_data/div_cats_2019-11-08.RDS")
pretty_simulated <- function(simulated) {
ifelse(simulated, "Simulated Divisions", "Reporting Divisions")
}
turnout_sim %<>% mutate(simulated = pretty_simulated(simulated))
turnout_cat <- turnout_sim %>%
left_join(div_cats %>% select(warddiv, cat)) %>%
group_by(simulated, cat, sim) %>%
summarise(
n_divs = length(unique(warddiv)),
turnout = sum(turnout)
) %>%
gather(key="var", value="value", n_divs, turnout) %>%
group_by(simulated, cat, var) %>%
summarise(
mean = mean(value),
pct_975 = quantile(value, 0.975),
pct_025 = quantile(value, 0.025)
)
cat_colors <- c(
"Black Voters" = light_blue,
"Wealthy Progressives" = light_red,
"White Moderates" = light_orange,
"Hispanic North Philly" = light_green
)
gg_turnout_cat <- ggplot(
turnout_cat %>% mutate(key = ifelse(var=="turnout", "Turnout", "N(Divisions)")),
aes(x=cat, y=mean)
) +
geom_bar(stat="identity", aes(fill=cat)) +
geom_errorbar(aes(ymin = pct_025, ymax=pct_975), width = 0.5) +
facet_grid(key ~ simulated, scales="free_y") +
theme_sixtysix() %+replace% theme(axis.text.x = element_blank()) +
scale_y_continuous(labels=scales::comma) +
scale_fill_manual(values=cat_colors) +
labs(
x=NULL,
y=NULL,
title="Turnout by Voting Bloc",
fill=NULL
)
print(gg_turnout_cat)
gg_office_overall <- function(sim_list){
cand_sim <- sim_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
filter_to_candidates() %>%
## Doesn't account for different cands/voter
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
group_by(candidate, sim, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
ggplot(
cand_sim,
aes(x=candidate, y=100*mean)
) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
geom_text(y = 0.4, aes(label = sprintf("%0.1f", 100*mean)), color="white") +
facet_grid(. ~ simulated) +
theme_sixtysix() %+replace%
theme(
axis.text.x = element_text(angle=45, vjust = 0.8, hjust=0.8)
) +
scale_y_continuous(labels=scales::comma) +
labs(
x=NULL,
y="Percent of the vote",
title="Simulated results",
fill=NULL
)
}
print(gg_office_overall(council_at_large_plot))
gg_office_cat <- function(council_list){
cand_sim_cat <- council_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
filter_to_candidates() %>%
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
left_join(div_cats %>% select(warddiv, cat)) %>%
group_by(candidate, sim, cat, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, cat, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
ggplot(
cand_sim_cat,
aes(x=cat, y=100*mean)
) +
geom_bar(stat="identity", aes(fill=cat)) +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
facet_grid(candidate ~ simulated) +
theme_sixtysix() %+replace% theme(axis.text.x = element_blank()) +
scale_y_continuous(labels=scales::comma) +
scale_fill_manual(values=cat_colors) +
labs(
x=NULL,
y="Percent of the vote",
title=sprintf("Needle Results as of %s pm", pretty_time),
subtitle=sim_subtitle,
fill=NULL
)
}
print(gg_office_cat(council_at_large_plot))
gg_office_overall <- function(sim_list){
cand_sim <- sim_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
## Doesn't account for different cands/voter
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
group_by(candidate, sim, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
ggplot(
cand_sim,
aes(x=candidate, y=100*mean)
) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
geom_text(y = 0.4, aes(label = sprintf("%0.1f", 100*mean)), color="white") +
facet_grid(. ~ simulated) +
theme_sixtysix() %+replace%
theme(
axis.text.x = element_text(angle=45, vjust = 0.8, hjust=0.8)
) +
scale_y_continuous(labels=scales::comma) +
labs(
x=NULL,
y="Percent of the vote",
title="Simulated results",
fill=NULL
)
}
print(gg_office_overall(council_at_large_plot))
council_at_large_plot$winners_sim
gg_office_overall <- function(sim_list){
cand_sim <- sim_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
## Doesn't account for different cands/voter
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
group_by(candidate, sim, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
cand_order <- sim_list$winners_sim %>% arrange(desc(pvote)) %>% with(candidate)
cand_sim$candidate <- factor(cand_sim$candidate, levels = cand_order)
ggplot(
cand_sim,
aes(x=candidate, y=100*mean)
) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
geom_text(y = 0.4, aes(label = sprintf("%0.1f", 100*mean)), color="white") +
facet_grid(. ~ simulated) +
theme_sixtysix() %+replace%
theme(
axis.text.x = element_text(angle=45, vjust = 0.8, hjust=0.8)
) +
scale_y_continuous(labels=scales::comma) +
labs(
x=NULL,
y="Percent of the vote",
title="Simulated results",
fill=NULL
)
}
print(gg_office_overall(council_at_large_plot))
ggplot(
cand_sim,
aes(x=candidate, y=100*mean)
) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
geom_text(y = 0.4, aes(label = sprintf("%0.1f", 100*mean)), color="white") +
facet_grid(simulated ~ .) +
theme_sixtysix() %+replace%
theme(
axis.text.x = element_text(angle=45, vjust = 0.8, hjust=0.8)
) +
scale_y_continuous(labels=scales::comma) +
labs(
x=NULL,
y="Percent of the vote",
title="Simulated results",
fill=NULL
)
gg_office_overall <- function(sim_list){
cand_sim <- sim_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
## Doesn't account for different cands/voter
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
group_by(candidate, sim, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
cand_order <- sim_list$winners_sim %>% arrange(desc(pvote)) %>% with(candidate)
cand_sim$candidate <- factor(cand_sim$candidate, levels = cand_order)
ggplot(
cand_sim,
aes(x=candidate, y=100*mean)
) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
geom_text(y = 0.4, aes(label = sprintf("%0.1f", 100*mean)), color="white") +
facet_grid(simulated ~ .) +
theme_sixtysix() %+replace%
theme(
axis.text.x = element_text(angle=45, vjust = 0.8, hjust=0.8)
) +
scale_y_continuous(labels=scales::comma) +
labs(
x=NULL,
y="Percent of the vote",
title="Simulated results",
fill=NULL
)
}
print(gg_office_overall(council_at_large_plot))
gg_office_cat <- function(council_list){
cand_sim_cat <- council_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
left_join(div_cats %>% select(warddiv, cat)) %>%
group_by(candidate, sim, cat, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, cat, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
cand_order <- sim_list$winners_sim %>% arrange(desc(pvote)) %>% with(candidate)
cand_sim_cat$candidate <- factor(cand_sim_cat$candidate, levels = cand_order)
ggplot(
cand_sim_cat,
aes(x=cat, y=100*mean)
) +
geom_bar(stat="identity", aes(fill=cat)) +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
facet_grid(candidate ~ simulated) +
theme_sixtysix() %+replace% theme(axis.text.x = element_blank()) +
scale_y_continuous(labels=scales::comma) +
scale_fill_manual(values=cat_colors) +
labs(
x=NULL,
y="Percent of the vote",
title=sprintf("Needle Results as of %s pm", pretty_time),
subtitle=sim_subtitle,
fill=NULL
)
}
print(gg_office_cat(council_at_large_plot))
gg_office_cat <- function(sim_list){
cand_sim_cat <- sim_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
left_join(div_cats %>% select(warddiv, cat)) %>%
group_by(candidate, sim, cat, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, cat, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
cand_order <- sim_list$winners_sim %>% arrange(desc(pvote)) %>% with(candidate)
cand_sim_cat$candidate <- factor(cand_sim_cat$candidate, levels = cand_order)
ggplot(
cand_sim_cat,
aes(x=cat, y=100*mean)
) +
geom_bar(stat="identity", aes(fill=cat)) +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
facet_grid(candidate ~ simulated) +
theme_sixtysix() %+replace% theme(axis.text.x = element_blank()) +
scale_y_continuous(labels=scales::comma) +
scale_fill_manual(values=cat_colors) +
labs(
x=NULL,
y="Percent of the vote",
title=sprintf("Needle Results as of %s pm", pretty_time),
subtitle=sim_subtitle,
fill=NULL
)
}
print(gg_office_cat(council_at_large_plot))
```{r candidate_sim_overall, fig.width="100%", fig.height=20}
gg_office_overall <- function(sim_list){
cand_sim <- sim_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
## Doesn't account for different cands/voter
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
group_by(candidate, sim, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
cand_order <- sim_list$winners_sim %>% arrange(desc(pvote)) %>% with(candidate)
cand_sim$candidate <- factor(cand_sim$candidate, levels = cand_order)
ggplot(
cand_sim,
aes(x=candidate, y=100*mean)
) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
geom_text(y = 0.4, aes(label = sprintf("%0.1f", 100*mean)), color="white") +
facet_grid(simulated ~ .) +
theme_sixtysix() %+replace%
theme(
axis.text.x = element_text(angle=45, vjust = 0.8, hjust=0.8)
) +
scale_y_continuous(labels=scales::comma) +
labs(
x=NULL,
y="Percent of the vote",
title="Simulated results",
fill=NULL
)
}
gg_office_cat <- function(sim_list){
cand_sim_cat <- sim_list$office_sim %>%
mutate(simulated = pretty_simulated(simulated)) %>%
left_join(turnout_sim %>% select(sim, warddiv, turnout)) %>%
left_join(div_cats %>% select(warddiv, cat)) %>%
group_by(candidate, sim, cat, simulated) %>%
summarise(pvote = weighted.mean(pvote, w=turnout)) %>%
group_by(candidate, cat, simulated) %>%
summarise(
mean = mean(pvote),
pct_975 = quantile(pvote, 0.975),
pct_025 = quantile(pvote, 0.025)
)
cand_order <- sim_list$winners_sim %>% arrange(desc(pvote)) %>% with(candidate)
cand_sim_cat$candidate <- factor(cand_sim_cat$candidate, levels = cand_order)
ggplot(
cand_sim_cat,
aes(x=cat, y=100*mean)
) +
geom_bar(stat="identity", aes(fill=cat)) +
geom_errorbar(aes(ymin =100* pct_025, ymax=100*pct_975), width = 0.5) +
facet_grid(candidate ~ simulated) +
theme_sixtysix() %+replace% theme(axis.text.x = element_blank()) +
scale_y_continuous(labels=scales::comma) +
scale_fill_manual(values=cat_colors) +
labs(
x=NULL,
y="Percent of the vote",
title=sprintf("Needle Results as of %s pm", pretty_time),
subtitle=sim_subtitle,
fill=NULL
)
}
print(gg_office_cat(council_at_large_plot))
library(rmarkdown)
setwd("C:/Users/Jonathan Tannen/Dropbox/sixty_six/posts/election_night_needle/")
source("needle_util.R")
ELECTION <- "20191105"
CONFIG <- get_config(ELECTION)
USE_LOG <- CONFIG$use_log
USE_MAPS <- TRUE
IS_TEST <- FALSE
source("needle.R")
source("tweets.R")
rmarkdown::render(
"needle.Rmd",
output_file="election_needle.html"
)
rmarkdown::render(
"needle.Rmd",
output_file="election_needle.html"
)
rmarkdown::render(
"needle.Rmd",
output_file="election_needle.html"
)
install.packages("testthat")
library(testthat)
getwd()
setwd("../turnout_tracker/tracker_v0/")
devtools::use_testthat()
install.packages("devtools")
rm(list=ls())
install.packages("devtools")
install.packages("devtools")
devtools::use_testthat()
