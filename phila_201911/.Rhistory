turnout,
file = "C:/Users/Jonathan Tannen/Dropbox/sixty_six/posts/turnout_tracker/tracker_v0/phila_201911/data/phila_turnout.csv",
row.names=FALSE
)
turnout %>% filter(election == "2019 primary") %>% with(sum(turnout))
source("config.R")
source("../util.R")
source("../download_google_sheet.R", chdir = TRUE)
source("../fit_submissions.R", chdir = TRUE)
source("../bootstrap.R", chdir = TRUE)
source("../generate_plots.R", chdir=TRUE)
setwd("phila_201911/")
source("config.R")
source("../util.R")
source("../download_google_sheet.R", chdir = TRUE)
source("../fit_submissions.R", chdir = TRUE)
install.packages("gsheet")
source("../download_google_sheet.R", chdir = TRUE)
source("../fit_submissions.R", chdir = TRUE)
source("../bootstrap.R", chdir = TRUE)
source("../generate_plots.R", chdir=TRUE)
install.packages("stargazer")
source("../generate_plots.R", chdir=TRUE)
library(rmarkdown)
library(tidyverse)
source("../prep_shapefiles.R", chdir = TRUE)
#
prep_shapefile(
config$precinct_shp_path,
config$get_precinct_id,
config$get_ward_from_precinct
)
source("../calc_params.R", chdir=TRUE)
# source("../prep_shapefiles.R", chdir = TRUE)
# prep_shapefile(
#   config$precinct_shp_path,
#   config$get_precinct_id,
#   config$get_ward_from_precinct
# )
#
# ## Precompute the historic parameters
# source("../calc_params.R", chdir=TRUE)
#
df <- read_csv(config$turnout_df_path, col_types = "ccd")
precincts <- safe_load("data/precincts.Rda")
wards <- safe_load("data/wards.Rda")
params <- calc_params(
turnout_df=df,
n_svd=3
)
turnout_df
turnout_df <- read_csv("data/phila_turnout.csv")
n_svd=3
validate_turnout_df(turnout_df)
df <- turnout_df
required_columns <- c("precinct", "election", "turnout")
if(!all(required_columns %in% names(df))) stop(
"turnout_df must have columns %s.",
paste(required_columns, collapse = ", ")
)
precincts <- unique(df$precinct)
elections <- unique(df$election)
all_rows <- expand.grid(precinct=precincts, election=elections)
missing_rows <- anti_join(all_rows, df)
missing_rows
df_major <- readRDS("C:/Users/Jonathan Tannen/Dropbox/sixty_six/data/processed_data/df_major_2019_09_19.Rds")
head(df_major)
turnout <- df_major %>%
filter(is_primary_office) %>%
group_by(warddiv, year, election) %>%
summarise(turnout = sum(votes))
turnout <- turnout %>%
group_by() %>%
mutate(
election = paste(year, election)
) %>%
rename(precinct=warddiv) %>%
select(precinct, election, turnout)
missing_rows <- tribble(
~precinct, ~election,
'4902', '2009 general',
'4903', '2009 general',
'4906', '2009 general',
'4902', '2009 primary',
'4903', '2009 primary',
'4906', '2009 primary',
'0532', '2018 primary',
'0533', '2018 primary',
'0534', '2018 primary',
'1818', '2018 primary'
) %>% mutate(turnout=NA)
groups <- missing_rows %>% mutate(ward = substr(precinct, 1, 2)) %>% select(ward, election) %>% unique()
## Add votes to the missing precincts so they are non-zero
## Subtract votes from the rest of the ward to preserve turnout
for(i in nrow(groups)){
ward_i <- groups$ward[i]
election_i <- groups$election[i]
use_rows <- which(substr(missing_rows$precinct, 1, 2) == ward_i & missing_rows$election == election_i)
precincts <- missing_rows$precinct[use_rows]
df_ward <- turnout %>%
filter(
substr(precinct, 1, 2)==ward_i
)
year_turnout <- df_ward %>% group_by(election) %>% summarise(turnout=sum(turnout))
df_lm <- df_ward %>%
filter(election != election_i)
fit <- lm(log(turnout) ~ election + precinct, data=df_lm)
## estimate the fixed effect from the observed divisions
fe <- df_ward %>%
filter(election == election_i) %>%
mutate(
effect = coef(fit)[paste0("precinct", precinct)],
effect=ifelse(is.na(effect), 0, effect),
resid=log(turnout)-effect-coef(fit)["(Intercept)"]
) %>% with(mean(resid))
div_turnout <- exp(coef(fit)[paste0("precinct", precincts)] + fe + coef(fit)["(Intercept)"])
other_div_rows <- which(substr(turnout$precinct, 1, 2) == ward_i & turnout$election == election_i)
ward_turnout <- turnout[
other_div_rows,
"turnout"
]
prop <- sum(ward_turnout) / (sum(div_turnout) + sum(ward_turnout))
missing_rows$turnout[use_rows] <- prop*div_turnout
turnout$turnout[other_div_rows] <- prop*turnout$turnout[other_div_rows]
turnout <- bind_rows(turnout, missing_rows[use_rows,])
}
turnout %>% filter(warddiv=="4902")
head(turnout)
turnout %>% filter(precinct=="4902")
turnout %>% filter(precinct=="4902") %>% as.data.frame()
turnout <- df_major %>%
filter(is_primary_office) %>%
group_by(warddiv, year, election) %>%
summarise(turnout = sum(votes))
turnout <- turnout %>%
group_by() %>%
mutate(
election = paste(year, election)
) %>%
rename(precinct=warddiv) %>%
select(precinct, election, turnout)
missing_rows <- tribble(
~precinct, ~election,
'4902', '2009 general',
'4903', '2009 general',
'4906', '2009 general',
'4902', '2009 primary',
'4903', '2009 primary',
'4906', '2009 primary',
'0532', '2018 primary',
'0533', '2018 primary',
'0534', '2018 primary',
'1818', '2018 primary'
) %>% mutate(turnout=NA)
groups <- missing_rows %>% mutate(ward = substr(precinct, 1, 2)) %>% select(ward, election) %>% unique()
groups
i <- 1
ward_i <- groups$ward[i]
election_i <- groups$election[i]
use_rows <- which(substr(missing_rows$precinct, 1, 2) == ward_i & missing_rows$election == election_i)
precincts <- missing_rows$precinct[use_rows]
use_rows
precincts
df_ward <- turnout %>%
filter(
substr(precinct, 1, 2)==ward_i
)
df_ward
year_turnout <- df_ward %>% group_by(election) %>% summarise(turnout=sum(turnout))
df_lm <- df_ward %>%
filter(election != election_i)
fit <- lm(log(turnout) ~ election + precinct, data=df_lm)
## estimate the fixed effect from the observed divisions
fe <- df_ward %>%
filter(election == election_i) %>%
mutate(
effect = coef(fit)[paste0("precinct", precinct)],
effect=ifelse(is.na(effect), 0, effect),
resid=log(turnout)-effect-coef(fit)["(Intercept)"]
) %>% with(mean(resid))
div_turnout <- exp(coef(fit)[paste0("precinct", precincts)] + fe + coef(fit)["(Intercept)"])
other_div_rows <- which(substr(turnout$precinct, 1, 2) == ward_i & turnout$election == election_i)
ward_turnout <- turnout[
other_div_rows,
"turnout"
]
ward_turnout
prop <- sum(ward_turnout) / (sum(div_turnout) + sum(ward_turnout))
missing_rows$turnout[use_rows] <- prop*div_turnout
missing_rows
turnout$turnout[other_div_rows] <- prop*turnout$turnout[other_div_rows]
turnout <- bind_rows(turnout, missing_rows[use_rows,])
missing_rows[use_rows,]
turnout
missing_rows[use_rows,]
turnout %>% filter(precinct == "4902")
turnout %>% filter(precinct == "4902") %>% tail
df_major <- readRDS("C:/Users/Jonathan Tannen/Dropbox/sixty_six/data/processed_data/df_major_2019_09_19.Rds")
head(df_major)
turnout <- df_major %>%
filter(is_primary_office) %>%
group_by(warddiv, year, election) %>%
summarise(turnout = sum(votes))
turnout <- turnout %>%
group_by() %>%
mutate(
election = paste(year, election)
) %>%
rename(precinct=warddiv) %>%
select(precinct, election, turnout)
missing_rows <- tribble(
~precinct, ~election,
'4902', '2009 general',
'4903', '2009 general',
'4906', '2009 general',
'4902', '2009 primary',
'4903', '2009 primary',
'4906', '2009 primary',
'0532', '2018 primary',
'0533', '2018 primary',
'0534', '2018 primary',
'1818', '2018 primary'
) %>% mutate(turnout=NA)
groups <- missing_rows %>% mutate(ward = substr(precinct, 1, 2)) %>% select(ward, election) %>% unique()
## Add votes to the missing precincts so they are non-zero
## Subtract votes from the rest of the ward to preserve turnout
for(i in nrow(groups)){
ward_i <- groups$ward[i]
election_i <- groups$election[i]
use_rows <- which(substr(missing_rows$precinct, 1, 2) == ward_i & missing_rows$election == election_i)
precincts <- missing_rows$precinct[use_rows]
df_ward <- turnout %>%
filter(
substr(precinct, 1, 2)==ward_i
)
year_turnout <- df_ward %>% group_by(election) %>% summarise(turnout=sum(turnout))
df_lm <- df_ward %>%
filter(election != election_i)
fit <- lm(log(turnout) ~ election + precinct, data=df_lm)
## estimate the fixed effect from the observed divisions
fe <- df_ward %>%
filter(election == election_i) %>%
mutate(
effect = coef(fit)[paste0("precinct", precinct)],
effect=ifelse(is.na(effect), 0, effect),
resid=log(turnout)-effect-coef(fit)["(Intercept)"]
) %>% with(mean(resid))
div_turnout <- exp(coef(fit)[paste0("precinct", precincts)] + fe + coef(fit)["(Intercept)"])
other_div_rows <- which(substr(turnout$precinct, 1, 2) == ward_i & turnout$election == election_i)
ward_turnout <- turnout[
other_div_rows,
"turnout"
]
prop <- sum(ward_turnout) / (sum(div_turnout) + sum(ward_turnout))
missing_rows$turnout[use_rows] <- prop*div_turnout
turnout$turnout[other_div_rows] <- prop*turnout$turnout[other_div_rows]
turnout <- bind_rows(turnout, missing_rows[use_rows,])
}
tail(turnout)
turnout %>% filter(precinct == "4902")
turnout %>% filter(precinct == "4902") %>% tail
turnout %>% filter(precinct == "4902") %>% as.data.frame()
turnout <- df_major %>%
filter(is_primary_office) %>%
group_by(warddiv, year, election) %>%
summarise(turnout = sum(votes))
turnout <- turnout %>%
group_by() %>%
mutate(
election = paste(year, election)
) %>%
rename(precinct=warddiv) %>%
select(precinct, election, turnout)
missing_rows <- tribble(
~precinct, ~election,
'4902', '2009 general',
'4903', '2009 general',
'4906', '2009 general',
'4902', '2009 primary',
'4903', '2009 primary',
'4906', '2009 primary',
'0532', '2018 primary',
'0533', '2018 primary',
'0534', '2018 primary',
'1818', '2018 primary'
) %>% mutate(turnout=NA)
groups <- missing_rows %>% mutate(ward = substr(precinct, 1, 2)) %>% select(ward, election) %>% unique()
## Add votes to the missing precincts so they are non-zero
## Subtract votes from the rest of the ward to preserve turnout
for(i in 1:nrow(groups)){
ward_i <- groups$ward[i]
election_i <- groups$election[i]
use_rows <- which(substr(missing_rows$precinct, 1, 2) == ward_i & missing_rows$election == election_i)
precincts <- missing_rows$precinct[use_rows]
df_ward <- turnout %>%
filter(
substr(precinct, 1, 2)==ward_i
)
year_turnout <- df_ward %>% group_by(election) %>% summarise(turnout=sum(turnout))
df_lm <- df_ward %>%
filter(election != election_i)
fit <- lm(log(turnout) ~ election + precinct, data=df_lm)
## estimate the fixed effect from the observed divisions
fe <- df_ward %>%
filter(election == election_i) %>%
mutate(
effect = coef(fit)[paste0("precinct", precinct)],
effect=ifelse(is.na(effect), 0, effect),
resid=log(turnout)-effect-coef(fit)["(Intercept)"]
) %>% with(mean(resid))
div_turnout <- exp(coef(fit)[paste0("precinct", precincts)] + fe + coef(fit)["(Intercept)"])
other_div_rows <- which(substr(turnout$precinct, 1, 2) == ward_i & turnout$election == election_i)
ward_turnout <- turnout[
other_div_rows,
"turnout"
]
prop <- sum(ward_turnout) / (sum(div_turnout) + sum(ward_turnout))
missing_rows$turnout[use_rows] <- prop*div_turnout
turnout$turnout[other_div_rows] <- prop*turnout$turnout[other_div_rows]
turnout <- bind_rows(turnout, missing_rows[use_rows,])
}
write.csv(
turnout,
file = "C:/Users/Jonathan Tannen/Dropbox/sixty_six/posts/turnout_tracker/tracker_v0/phila_201911/data/phila_turnout.csv",
row.names=FALSE
)
turnout %>% filter(election == "2019 primary") %>% with(sum(turnout))
rm(list = ls())
source("../prep_shapefiles.R", chdir = TRUE)
prep_shapefile(
config$precinct_shp_path,
config$get_precinct_id,
config$get_ward_from_precinct
)
source("config.R")
source("../util.R")
source("../download_google_sheet.R", chdir = TRUE)
source("../fit_submissions.R", chdir = TRUE)
source("../bootstrap.R", chdir = TRUE)
source("../generate_plots.R", chdir=TRUE)
library(rmarkdown)
library(tidyverse)
# #######################
# ## BEFORE ELECTION DAY
# #######################
source("../prep_shapefiles.R", chdir = TRUE)
prep_shapefile(
config$precinct_shp_path,
config$get_precinct_id,
config$get_ward_from_precinct
)
# ## BEFORE ELECTION DAY
# #######################
# source("../prep_shapefiles.R", chdir = TRUE)
# prep_shapefile(
#   config$precinct_shp_path,
#   config$get_precinct_id,
#   config$get_ward_from_precinct
# )
#
# ## Precompute the historic parameters
source("../calc_params.R", chdir=TRUE)
df <- read_csv(config$turnout_df_path, col_types = "ccd")
precincts <- safe_load("data/precincts.Rda")
wards <- safe_load("data/wards.Rda")
# )
#
# ## Precompute the historic parameters
# source("../calc_params.R", chdir=TRUE)
#
# df <- read_csv(config$turnout_df_path, col_types = "ccd")
#
# precincts <- safe_load("data/precincts.Rda")
# wards <- safe_load("data/wards.Rda")
#
params <- calc_params(
turnout_df=df,
n_svd=3
)
#
# df <- read_csv(config$turnout_df_path, col_types = "ccd")
#
# precincts <- safe_load("data/precincts.Rda")
# wards <- safe_load("data/wards.Rda")
#
# params <- calc_params(
#   turnout_df=df,
#   n_svd=3
# )
diagnostics(params, precincts, config)
install.packages("lwgeom")
install.packages("lwgeom")
#
# df <- read_csv(config$turnout_df_path, col_types = "ccd")
#
# precincts <- safe_load("data/precincts.Rda")
# wards <- safe_load("data/wards.Rda")
#
# params <- calc_params(
#   turnout_df=df,
#   n_svd=3
# )
diagnostics(params, precincts, config)
source("../util.R")
#
# df <- read_csv(config$turnout_df_path, col_types = "ccd")
#
# precincts <- safe_load("data/precincts.Rda")
# wards <- safe_load("data/wards.Rda")
#
# params <- calc_params(
#   turnout_df=df,
#   n_svd=3
# )
diagnostics(params, precincts, config)
#
# precincts <- safe_load("data/precincts.Rda")
# wards <- safe_load("data/wards.Rda")
#
# params <- calc_params(
#   turnout_df=df,
#   n_svd=3
# )
# diagnostics(params, precincts, config)
#
save_with_backup(params, stem="params", dir="outputs")
params <- safe_load("outputs/params.Rda")
use_real_data
if(
!exists("use_real_data") |
!exists("is_test")
) stop("must specify values first!")
use_real_data <- TRUE
use_real_data <- FALSE
run_iter <- 0
run_iter <- run_iter + 1
print(paste("Run", run_iter))
print(Sys.time())
print("download_google_sheet")
if(use_real_data) raw_data <- download_google_sheet(config)
print("load_data")
data_load <- load_data(use_real_data, config, params)
raw_data <- data_load$raw_data
print("save_with_backup")
save(raw_data, file=paste0("outputs/raw_data.Rda"))
write.csv(raw_data, file=sprintf("outputs/raw_data_%s.csv", config$city_filename), row.names=FALSE)
if(!use_real_data) print(data_load$fake_data$true_turnout)
print("fit_bootstrap")
bs <- fit_bootstrap(
raw_data,
params,
election_config=config,
n_boot=40,
use_inverse=FALSE,
verbose=FALSE
)
save_with_backup(bs, stem="bootstrap", dir="outputs")
is_test
is_test <- TRUE
filename <- "turnout_tracker_%s_test.html"
print("rmarkdown")
rmarkdown::render(
"../election_tracker.Rmd",
knit_root_dir = getwd(),
output_dir = "outputs",
output_file = sprintf(filename, config$city_filename)
)
print("copy and git")
for(f0 in c(filename, "precinct_turnout_%s.csv", "raw_data_%s.csv")){
f <- sprintf(f0, config$city_filename)
file.copy(
paste0("outputs/", f),
paste0("C:/Users/Jonathan Tannen/Dropbox/github_page/jtannen.github.io/", f),
overwrite=TRUE
)
}
get_subtite(Sys.time())
get_subtitle(Sys.time())
strip_leading_zero
?strip_leading_zero
library(dplyr)
library(ggplot2)
library(sf)
library(lubridate)
library(stargazer)
strip_leading_zero
get_subtitle <- function(current_time){
paste(
"Results as of",
strip_leading_zero(
format(current_time, "%I:%M")
)
)
}
strip_leading_zero
library(dplyr)
library(ggplot2)
library(sf)
library(lubridate)
library(stargazer)
strip_leading_zero
?strip_leading_zero
strip_leading_zero <- function(x) gsub("^(0|\\s)+", "", x)
get_subtitle(Sys.time())
rmarkdown::render(
"../election_tracker.Rmd",
knit_root_dir = getwd(),
output_dir = "outputs",
output_file = sprintf(filename, config$city_filename)
)
library(twitteR)
install.packages("twitteR")
